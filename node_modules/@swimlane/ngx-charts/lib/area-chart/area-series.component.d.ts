import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { ColorHelper } from '../common/color.helper';
import { Gradient } from '../common/types/gradient.interface';
import { ScaleType } from '../common/types/scale-type.enum';
import { AreaChartSeries } from '../models/chart-data.model';
import * as i0 from "@angular/core";
export declare class AreaSeriesComponent implements OnChanges {
    data: AreaChartSeries;
    xScale: any;
    yScale: any;
    baseValue: any;
    colors: ColorHelper;
    scaleType: ScaleType;
    stacked: boolean;
    normalized: boolean;
    gradient: boolean;
    curve: any;
    activeEntries: any[];
    animations: boolean;
    select: EventEmitter<any>;
    opacity: number;
    path: string;
    startingPath: string;
    hasGradient: boolean;
    gradientStops: Gradient[];
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    updateGradient(): void;
    isActive(entry: any): boolean;
    isInactive(entry: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<AreaSeriesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AreaSeriesComponent, "g[ngx-charts-area-series]", never, { "data": { "alias": "data"; "required": false; }; "xScale": { "alias": "xScale"; "required": false; }; "yScale": { "alias": "yScale"; "required": false; }; "baseValue": { "alias": "baseValue"; "required": false; }; "colors": { "alias": "colors"; "required": false; }; "scaleType": { "alias": "scaleType"; "required": false; }; "stacked": { "alias": "stacked"; "required": false; }; "normalized": { "alias": "normalized"; "required": false; }; "gradient": { "alias": "gradient"; "required": false; }; "curve": { "alias": "curve"; "required": false; }; "activeEntries": { "alias": "activeEntries"; "required": false; }; "animations": { "alias": "animations"; "required": false; }; }, { "select": "select"; }, never, never, false, never>;
}
