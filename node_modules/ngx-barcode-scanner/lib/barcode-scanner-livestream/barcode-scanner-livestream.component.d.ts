import { ElementRef, EventEmitter, OnChanges, OnDestroy } from '@angular/core';
import { QuaggaJSConfigObject, QuaggaJSResultObject } from '@ericblade/quagga2';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class BarcodeScannerLivestreamComponent implements OnChanges, OnDestroy {
    type: string | string[];
    deviceId: string;
    maxWidth: string;
    maxHeight: string;
    config: Partial<QuaggaJSConfigObject>;
    errorFilter: {
        median?: number;
        threshold?: number;
    };
    set torch(value: boolean);
    _valueChanges: Subject<unknown>;
    valueChanges: EventEmitter<QuaggaJSResultObject>;
    started: EventEmitter<boolean>;
    barcodeScanner: ElementRef<HTMLDivElement>;
    get _maxWidth(): string;
    get _maxHeight(): string;
    private _started;
    get isStarted(): boolean;
    private _destroyed;
    private configQuagga;
    constructor();
    ngOnDestroy(): void;
    ngOnChanges(): void;
    private _init;
    private _getMedian;
    start(): Promise<void>;
    stop(): void;
    restart(): void;
    onProcessed(result: QuaggaJSResultObject): any;
    onDetected(result: QuaggaJSResultObject): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BarcodeScannerLivestreamComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BarcodeScannerLivestreamComponent, "barcode-scanner-livestream", never, { "type": "type"; "deviceId": "deviceId"; "maxWidth": "maxWidth"; "maxHeight": "maxHeight"; "config": "config"; "errorFilter": "errorFilter"; "torch": "torch"; }, { "valueChanges": "valueChanges"; "started": "started"; }, never, never, false>;
}
