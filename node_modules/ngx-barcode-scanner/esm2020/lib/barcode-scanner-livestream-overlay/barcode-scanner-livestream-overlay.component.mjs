import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { BarcodeScannerLivestreamComponent } from '../barcode-scanner-livestream/barcode-scanner-livestream.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../barcode-scanner-livestream/barcode-scanner-livestream.component";
export class BarcodeScannerLivestreamOverlayComponent {
    constructor() {
        this._started = false;
        this.width = '90vw';
        this.maxWidth = '640px';
        this.valueChanges = new EventEmitter();
        this.started = new EventEmitter();
        this._showScanner = false;
    }
    get isStarted() {
        return this._started;
    }
    get showScanner() {
        return this._showScanner;
    }
    ngOnDestroy() {
        this.scanner.stop();
    }
    show() {
        this._showScanner = true;
        this.scanner.start();
    }
    hide() {
        this._showScanner = false;
        this.scanner.stop();
    }
    onStarted(value) {
        this._started = value;
        this.started.next(value);
    }
    onValueChanges(result) {
        this.valueChanges.next(result);
    }
}
BarcodeScannerLivestreamOverlayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.11", ngImport: i0, type: BarcodeScannerLivestreamOverlayComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BarcodeScannerLivestreamOverlayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.11", type: BarcodeScannerLivestreamOverlayComponent, selector: "barcode-scanner-livestream-overlay", inputs: { type: "type", deviceId: "deviceId", width: "width", maxWidth: "maxWidth", height: "height", maxHeight: "maxHeight", config: "config" }, outputs: { valueChanges: "valueChanges", started: "started" }, viewQueries: [{ propertyName: "scanner", first: true, predicate: BarcodeScannerLivestreamComponent, descendants: true }], ngImport: i0, template: "<div class=\"barcode-scanner-livestream-overlay\" [hidden]=\"!showScanner\">\n  <div\n    class=\"barcode-scanner-livestream-overlay-content\"\n    [style.width]=\"width\"\n    [style.max-width]=\"maxWidth\"\n    [style.height]=\"height\"\n    [style.max-height]=\"maxHeight\"\n  >\n    <div\n      class=\"barcode-scanner-livestream-overlay-close\"\n      *ngIf=\"isStarted\"\n      (click)=\"hide()\"\n    >\n      X\n    </div>\n    <barcode-scanner-livestream\n      [type]=\"type\"\n      [deviceId]=\"deviceId\"\n      [config]=\"config\"\n      (valueChanges)=\"onValueChanges($event)\"\n      (started)=\"onStarted($event)\"\n    ></barcode-scanner-livestream>\n  </div>\n</div>\n", styles: [".barcode-scanner-livestream-overlay{overflow:hidden;position:fixed;inset:0;width:100%;background-color:#0000004d;z-index:1000}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content{top:50%;position:absolute;left:50%;transform:translate(-50%,-50%)}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content .barcode-scanner-livestream-overlay-close{position:absolute;right:0;padding:.5rem;width:1.5rem;height:1.5rem;line-height:1.5rem;text-align:center;background-color:#fff;cursor:pointer;border:2px solid black;font-size:1.3rem;margin:-1rem;border-radius:2rem;z-index:100;box-sizing:content-box}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.BarcodeScannerLivestreamComponent, selector: "barcode-scanner-livestream", inputs: ["type", "deviceId", "maxWidth", "maxHeight", "config", "errorFilter", "torch"], outputs: ["valueChanges", "started"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.11", ngImport: i0, type: BarcodeScannerLivestreamOverlayComponent, decorators: [{
            type: Component,
            args: [{ selector: 'barcode-scanner-livestream-overlay', template: "<div class=\"barcode-scanner-livestream-overlay\" [hidden]=\"!showScanner\">\n  <div\n    class=\"barcode-scanner-livestream-overlay-content\"\n    [style.width]=\"width\"\n    [style.max-width]=\"maxWidth\"\n    [style.height]=\"height\"\n    [style.max-height]=\"maxHeight\"\n  >\n    <div\n      class=\"barcode-scanner-livestream-overlay-close\"\n      *ngIf=\"isStarted\"\n      (click)=\"hide()\"\n    >\n      X\n    </div>\n    <barcode-scanner-livestream\n      [type]=\"type\"\n      [deviceId]=\"deviceId\"\n      [config]=\"config\"\n      (valueChanges)=\"onValueChanges($event)\"\n      (started)=\"onStarted($event)\"\n    ></barcode-scanner-livestream>\n  </div>\n</div>\n", styles: [".barcode-scanner-livestream-overlay{overflow:hidden;position:fixed;inset:0;width:100%;background-color:#0000004d;z-index:1000}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content{top:50%;position:absolute;left:50%;transform:translate(-50%,-50%)}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content .barcode-scanner-livestream-overlay-close{position:absolute;right:0;padding:.5rem;width:1.5rem;height:1.5rem;line-height:1.5rem;text-align:center;background-color:#fff;cursor:pointer;border:2px solid black;font-size:1.3rem;margin:-1rem;border-radius:2rem;z-index:100;box-sizing:content-box}\n"] }]
        }], propDecorators: { type: [{
                type: Input
            }], deviceId: [{
                type: Input
            }], width: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], height: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], config: [{
                type: Input
            }], valueChanges: [{
                type: Output
            }], started: [{
                type: Output
            }], scanner: [{
                type: ViewChild,
                args: [BarcodeScannerLivestreamComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtYmFyY29kZS1zY2FubmVyL3NyYy9saWIvYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheS9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS1vdmVybGF5LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1iYXJjb2RlLXNjYW5uZXIvc3JjL2xpYi9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS1vdmVybGF5L2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLW92ZXJsYXkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFhLE1BQU0sRUFBRSxTQUFTLEVBQy9ELE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLG9FQUFvRSxDQUFDOzs7O0FBT3ZILE1BQU0sT0FBTyx3Q0FBd0M7SUFMckQ7UUFPWSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBV2hCLFVBQUssR0FBRyxNQUFNLENBQUM7UUFFZixhQUFRLEdBQUcsT0FBTyxDQUFDO1FBUWxCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUUxQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUt4QyxpQkFBWSxHQUFHLEtBQUssQ0FBQztLQTZCaEM7SUF2REcsSUFBSSxTQUFTO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUEwQkQsSUFBSSxXQUFXO1FBQ1gsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSTtRQUNBLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBYztRQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsY0FBYyxDQUFDLE1BQWM7UUFDekIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7c0lBekRRLHdDQUF3QzswSEFBeEMsd0NBQXdDLG9VQTJCdEMsaUNBQWlDLGdEQ3RDaEQsa3JCQXdCQTs0RkRiYSx3Q0FBd0M7a0JBTHBELFNBQVM7K0JBQ0ksb0NBQW9DOzhCQWFyQyxJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsUUFBUTtzQkFBaEIsS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBRUcsUUFBUTtzQkFBaEIsS0FBSztnQkFFRyxNQUFNO3NCQUFkLEtBQUs7Z0JBRUcsU0FBUztzQkFBakIsS0FBSztnQkFFRyxNQUFNO3NCQUFkLEtBQUs7Z0JBRUksWUFBWTtzQkFBckIsTUFBTTtnQkFFRyxPQUFPO3NCQUFoQixNQUFNO2dCQUdQLE9BQU87c0JBRE4sU0FBUzt1QkFBQyxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPdXRwdXQsIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFF1YWdnYUpTQ29uZmlnT2JqZWN0IH0gZnJvbSAnQGVyaWNibGFkZS9xdWFnZ2EyJztcbmltcG9ydCB7IEJhcmNvZGVTY2FubmVyTGl2ZXN0cmVhbUNvbXBvbmVudCB9IGZyb20gJy4uL2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtL2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLW92ZXJsYXkuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLW92ZXJsYXkuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQmFyY29kZVNjYW5uZXJMaXZlc3RyZWFtT3ZlcmxheUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgICBwcml2YXRlIF9zdGFydGVkID0gZmFsc2U7XG5cbiAgICBnZXQgaXNTdGFydGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhcnRlZDtcbiAgICB9XG5cbiAgICAvLyBJbnB1dHNcbiAgICBASW5wdXQoKSB0eXBlOiBzdHJpbmcgfCBzdHJpbmdbXTtcblxuICAgIEBJbnB1dCgpIGRldmljZUlkOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSB3aWR0aCA9ICc5MHZ3JztcblxuICAgIEBJbnB1dCgpIG1heFdpZHRoID0gJzY0MHB4JztcblxuICAgIEBJbnB1dCgpIGhlaWdodDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgbWF4SGVpZ2h0OiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBjb25maWc6IFBhcnRpYWw8UXVhZ2dhSlNDb25maWdPYmplY3Q+O1xuXG4gICAgQE91dHB1dCgpIHZhbHVlQ2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gICAgQE91dHB1dCgpIHN0YXJ0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgICBAVmlld0NoaWxkKEJhcmNvZGVTY2FubmVyTGl2ZXN0cmVhbUNvbXBvbmVudClcbiAgICBzY2FubmVyOiBCYXJjb2RlU2Nhbm5lckxpdmVzdHJlYW1Db21wb25lbnQ7XG5cbiAgICBwcml2YXRlIF9zaG93U2Nhbm5lciA9IGZhbHNlO1xuXG4gICAgZ2V0IHNob3dTY2FubmVyKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd1NjYW5uZXI7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc2Nhbm5lci5zdG9wKCk7XG4gICAgfVxuXG4gICAgc2hvdygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fc2hvd1NjYW5uZXIgPSB0cnVlO1xuICAgICAgICB0aGlzLnNjYW5uZXIuc3RhcnQoKTtcbiAgICB9XG5cbiAgICBoaWRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9zaG93U2Nhbm5lciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNjYW5uZXIuc3RvcCgpO1xuICAgIH1cblxuICAgIG9uU3RhcnRlZCh2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLl9zdGFydGVkID0gdmFsdWU7XG4gICAgICAgIHRoaXMuc3RhcnRlZC5uZXh0KHZhbHVlKTtcbiAgICB9XG5cbiAgICBvblZhbHVlQ2hhbmdlcyhyZXN1bHQ6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlcy5uZXh0KHJlc3VsdCk7XG4gICAgfVxuXG59XG4iLCI8ZGl2IGNsYXNzPVwiYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheVwiIFtoaWRkZW5dPVwiIXNob3dTY2FubmVyXCI+XG4gIDxkaXZcbiAgICBjbGFzcz1cImJhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLW92ZXJsYXktY29udGVudFwiXG4gICAgW3N0eWxlLndpZHRoXT1cIndpZHRoXCJcbiAgICBbc3R5bGUubWF4LXdpZHRoXT1cIm1heFdpZHRoXCJcbiAgICBbc3R5bGUuaGVpZ2h0XT1cImhlaWdodFwiXG4gICAgW3N0eWxlLm1heC1oZWlnaHRdPVwibWF4SGVpZ2h0XCJcbiAgPlxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwiYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheS1jbG9zZVwiXG4gICAgICAqbmdJZj1cImlzU3RhcnRlZFwiXG4gICAgICAoY2xpY2spPVwiaGlkZSgpXCJcbiAgICA+XG4gICAgICBYXG4gICAgPC9kaXY+XG4gICAgPGJhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtXG4gICAgICBbdHlwZV09XCJ0eXBlXCJcbiAgICAgIFtkZXZpY2VJZF09XCJkZXZpY2VJZFwiXG4gICAgICBbY29uZmlnXT1cImNvbmZpZ1wiXG4gICAgICAodmFsdWVDaGFuZ2VzKT1cIm9uVmFsdWVDaGFuZ2VzKCRldmVudClcIlxuICAgICAgKHN0YXJ0ZWQpPVwib25TdGFydGVkKCRldmVudClcIlxuICAgID48L2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19