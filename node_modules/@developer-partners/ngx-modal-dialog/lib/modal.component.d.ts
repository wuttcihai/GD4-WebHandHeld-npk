import { ComponentRef, ViewContainerRef, AfterViewInit, Type, ChangeDetectorRef, ElementRef, OnDestroy } from "@angular/core";
import { ModalReference } from './modal-reference';
import { ModalSize } from './modal-config';
import * as i0 from "@angular/core";
export declare class ModalComponent implements AfterViewInit, OnDestroy {
    private _changeDetectorRef;
    private _mouseDownPressed;
    modalReference: ModalReference<any>;
    componentRef: ComponentRef<any>;
    contentComponentType: Type<any>;
    modalSize: typeof ModalSize;
    classConfig: any;
    contentContainer: ViewContainerRef;
    bodyElement: ElementRef<HTMLElement>;
    constructor(changeDetectorRef: ChangeDetectorRef, modalRefernce: ModalReference<any, any>);
    private createModalContent;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private isBackdropElement;
    mouseDownEvent(event: MouseEvent, backdropCliecked: boolean): void;
    mouseUpEvent(event: MouseEvent): void;
    keyUpEvent(event: KeyboardEvent): void;
    maximize(): void;
    restoreWindow(): void;
    close(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ModalComponent, "dp-modal", never, {}, {}, never, never, false>;
}
