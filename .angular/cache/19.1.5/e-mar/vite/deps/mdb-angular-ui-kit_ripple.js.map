{
  "version": 3,
  "sources": ["../../../../../../node_modules/mdb-angular-ui-kit/fesm2022/mdb-angular-ui-kit-ripple.mjs"],
  "sourcesContent": ["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nconst DEFAULT_RIPPLE_COLOR = [0, 0, 0];\nfunction durationToMsNumber(time) {\n  return Number(time.replace('ms', '').replace('s', '000'));\n}\nfunction colorToRGB(color) {\n  // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n  function hexToRgb(color) {\n    const HEX_COLOR_LENGTH = 7;\n    const IS_SHORT_HEX = color.length < HEX_COLOR_LENGTH;\n    if (IS_SHORT_HEX) {\n      color = `#${color[1]}${color[1]}${color[2]}${color[2]}${color[3]}${color[3]}`;\n    }\n    return [parseInt(color.substr(1, 2), 16), parseInt(color.substr(3, 2), 16), parseInt(color.substr(5, 2), 16)];\n  }\n  // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n  function namedColorsToRgba(color) {\n    const tempElem = document.body.appendChild(document.createElement('fictum'));\n    const flag = 'rgb(1, 2, 3)';\n    tempElem.style.color = flag;\n    if (tempElem.style.color !== flag) {\n      return DEFAULT_RIPPLE_COLOR;\n    }\n    tempElem.style.color = color;\n    if (tempElem.style.color === flag || tempElem.style.color === '') {\n      return DEFAULT_RIPPLE_COLOR;\n    } // color parse failed\n    color = getComputedStyle(tempElem).color;\n    document.body.removeChild(tempElem);\n    return color;\n  }\n  // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n  function rgbaToRgb(color) {\n    color = color.match(/[.\\d]+/g).map(a => +Number(a));\n    color.length = 3;\n    return color;\n  }\n  if (color.toLowerCase() === 'transparent') {\n    return DEFAULT_RIPPLE_COLOR;\n  }\n  if (color[0] === '#') {\n    return hexToRgb(color);\n  }\n  if (color.indexOf('rgb') === -1) {\n    color = namedColorsToRgba(color);\n  }\n  if (color.indexOf('rgb') === 0) {\n    return rgbaToRgb(color);\n  }\n  return DEFAULT_RIPPLE_COLOR;\n}\nfunction getDiameter({\n  offsetX,\n  offsetY,\n  height,\n  width\n}) {\n  const top = offsetY <= height / 2;\n  const left = offsetX <= width / 2;\n  const pythagorean = (sideA, sideB) => Math.sqrt(sideA ** 2 + sideB ** 2);\n  const positionCenter = offsetY === height / 2 && offsetX === width / 2;\n  // mouse position on the quadrants of the coordinate system\n  const quadrant = {\n    first: top === true && left === false,\n    second: top === true && left === true,\n    third: top === false && left === true,\n    fourth: top === false && left === false\n  };\n  const getCorner = {\n    topLeft: pythagorean(offsetX, offsetY),\n    topRight: pythagorean(width - offsetX, offsetY),\n    bottomLeft: pythagorean(offsetX, height - offsetY),\n    bottomRight: pythagorean(width - offsetX, height - offsetY)\n  };\n  let diameter = 0;\n  if (positionCenter || quadrant.fourth) {\n    diameter = getCorner.topLeft;\n  } else if (quadrant.third) {\n    diameter = getCorner.topRight;\n  } else if (quadrant.second) {\n    diameter = getCorner.bottomRight;\n  } else if (quadrant.first) {\n    diameter = getCorner.bottomLeft;\n  }\n  return diameter * 2;\n}\nconst TRANSITION_BREAK_OPACITY = 0.5;\nconst GRADIENT = 'rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%';\nconst BOOTSTRAP_COLORS = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\nclass MdbRippleDirective {\n  _elementRef;\n  _renderer;\n  get rippleCentered() {\n    return this._rippleCentered;\n  }\n  set rippleCentered(value) {\n    this._rippleCentered = coerceBooleanProperty(value);\n  }\n  _rippleCentered = false;\n  rippleColor = '';\n  rippleDuration = '500ms';\n  rippleRadius = 0;\n  get rippleUnbound() {\n    return this._rippleUnbound;\n  }\n  set rippleUnbound(value) {\n    this._rippleUnbound = coerceBooleanProperty(value);\n  }\n  _rippleUnbound = false;\n  _rippleInSpan = false;\n  _rippleTimer = null;\n  constructor(_elementRef, _renderer) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n  }\n  get host() {\n    return this._elementRef.nativeElement;\n  }\n  ripple = true;\n  _createRipple(event) {\n    const {\n      layerX,\n      layerY\n    } = event;\n    const offsetX = layerX;\n    const offsetY = layerY;\n    const height = this.host.offsetHeight;\n    const width = this.host.offsetWidth;\n    const duration = durationToMsNumber(this.rippleDuration);\n    const diameterOptions = {\n      offsetX: this.rippleCentered ? height / 2 : offsetX,\n      offsetY: this.rippleCentered ? width / 2 : offsetY,\n      height,\n      width\n    };\n    const diameter = getDiameter(diameterOptions);\n    const radiusValue = this.rippleRadius || diameter / 2;\n    const opacity = {\n      delay: duration * TRANSITION_BREAK_OPACITY,\n      duration: duration - duration * TRANSITION_BREAK_OPACITY\n    };\n    const styles = {\n      left: this.rippleCentered ? `${width / 2 - radiusValue}px` : `${offsetX - radiusValue}px`,\n      top: this.rippleCentered ? `${height / 2 - radiusValue}px` : `${offsetY - radiusValue}px`,\n      height: `${this.rippleRadius * 2 || diameter}px`,\n      width: `${this.rippleRadius * 2 || diameter}px`,\n      transitionDelay: `0s, ${opacity.delay}ms`,\n      transitionDuration: `${duration}ms, ${opacity.duration}ms`\n    };\n    const rippleHTML = this._renderer.createElement('div');\n    if (this.host.tagName.toLowerCase() === 'input') {\n      this._createWrapperSpan();\n    }\n    this._createHTMLRipple(this.host, rippleHTML, styles);\n    this._removeHTMLRipple(rippleHTML, duration);\n  }\n  _createWrapperSpan() {\n    const parent = this._renderer.parentNode(this.host);\n    this._rippleInSpan = true;\n    if (parent.tagName.toLowerCase() === 'span' && parent.classList.contains('ripple-surface')) {\n      this._elementRef.nativeElement = parent;\n    } else {\n      const wrapper = this._renderer.createElement('span');\n      this._renderer.addClass(wrapper, 'ripple-surface');\n      this._renderer.addClass(wrapper, 'input-wrapper');\n      this._renderer.setStyle(wrapper, 'border', 0);\n      const shadow = getComputedStyle(this.host).boxShadow;\n      this._renderer.setStyle(wrapper, 'box-shadow', shadow);\n      // Put element as child\n      parent.replaceChild(wrapper, this.host);\n      wrapper.appendChild(this.host);\n      this._elementRef.nativeElement = wrapper;\n    }\n    this.host.focus();\n  }\n  _removeWrapperSpan() {\n    const child = this.host.firstChild;\n    this.host.replaceWith(child);\n    this._elementRef.nativeElement = child;\n    this.host.focus();\n    this._rippleInSpan = false;\n  }\n  _createHTMLRipple(wrapper, ripple, styles) {\n    Object.keys(styles).forEach(property => ripple.style[property] = styles[property]);\n    this._renderer.addClass(ripple, 'ripple-wave');\n    if (this.rippleColor !== '') {\n      this._removeOldColorClasses(wrapper);\n      this._addColor(ripple, wrapper);\n    }\n    this._toggleUnbound(wrapper);\n    this._appendRipple(ripple, wrapper);\n  }\n  _removeHTMLRipple(ripple, duration) {\n    if (this._rippleTimer) {\n      clearTimeout(this._rippleTimer);\n      this._rippleTimer = null;\n    }\n    this._rippleTimer = setTimeout(() => {\n      if (ripple) {\n        ripple.remove();\n        this.host.querySelectorAll('.ripple-wave').forEach(rippleEl => {\n          rippleEl.remove();\n        });\n        if (this._rippleInSpan && this.host.classList.contains('input-wrapper')) {\n          this._removeWrapperSpan();\n        }\n      }\n    }, duration);\n  }\n  _appendRipple(target, parent) {\n    const FIX_ADD_RIPPLE_EFFECT = 50; // delay for active animations\n    this._renderer.appendChild(parent, target);\n    setTimeout(() => {\n      this._renderer.addClass(target, 'active');\n    }, FIX_ADD_RIPPLE_EFFECT);\n  }\n  _toggleUnbound(target) {\n    if (this.rippleUnbound) {\n      this._renderer.addClass(target, 'ripple-surface-unbound');\n    } else {\n      this._renderer.removeClass(target, 'ripple-surface-unbound');\n    }\n  }\n  _addColor(target, parent) {\n    const isBootstrapColor = BOOTSTRAP_COLORS.find(color => color === this.rippleColor.toLowerCase());\n    if (isBootstrapColor) {\n      this._renderer.addClass(parent, `${'ripple-surface'}-${this.rippleColor.toLowerCase()}`);\n    } else {\n      const rgbValue = colorToRGB(this.rippleColor).join(',');\n      const gradientImage = GRADIENT.split('{{color}}').join(`${rgbValue}`);\n      target.style.backgroundImage = `radial-gradient(circle, ${gradientImage})`;\n    }\n  }\n  _removeOldColorClasses(target) {\n    const REGEXP_CLASS_COLOR = new RegExp(`${'ripple-surface'}-[a-z]+`, 'gi');\n    const PARENT_CLASSS_COLOR = target.classList.value.match(REGEXP_CLASS_COLOR) || [];\n    PARENT_CLASSS_COLOR.forEach(className => {\n      this._renderer.removeClass(target, className);\n    });\n  }\n  static ngAcceptInputType_rippleCentered;\n  static ngAcceptInputType_rippleUnbound;\n  static ɵfac = function MdbRippleDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbRippleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MdbRippleDirective,\n    selectors: [[\"\", \"mdbRipple\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MdbRippleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MdbRippleDirective_click_HostBindingHandler($event) {\n          return ctx._createRipple($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ripple-surface\", ctx.ripple);\n      }\n    },\n    inputs: {\n      rippleCentered: \"rippleCentered\",\n      rippleColor: \"rippleColor\",\n      rippleDuration: \"rippleDuration\",\n      rippleRadius: \"rippleRadius\",\n      rippleUnbound: \"rippleUnbound\"\n    },\n    exportAs: [\"mdbRipple\"],\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRippleDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbRipple]',\n      exportAs: 'mdbRipple'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }], {\n    rippleCentered: [{\n      type: Input\n    }],\n    rippleColor: [{\n      type: Input\n    }],\n    rippleDuration: [{\n      type: Input\n    }],\n    rippleRadius: [{\n      type: Input\n    }],\n    rippleUnbound: [{\n      type: Input\n    }],\n    ripple: [{\n      type: HostBinding,\n      args: ['class.ripple-surface']\n    }],\n    _createRipple: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass MdbRippleModule {\n  static ɵfac = function MdbRippleModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbRippleModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MdbRippleModule,\n    declarations: [MdbRippleDirective],\n    exports: [MdbRippleDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRippleModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbRippleDirective],\n      imports: [],\n      exports: [MdbRippleDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbRippleDirective, MdbRippleModule };\n"],
  "mappings": "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",
  "names": ["color"]
}
