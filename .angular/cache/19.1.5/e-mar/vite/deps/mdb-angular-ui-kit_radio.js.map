{
  "version": 3,
  "sources": ["../../../../../../node_modules/mdb-angular-ui-kit/fesm2022/mdb-angular-ui-kit-radio.mjs"],
  "sourcesContent": ["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, HostBinding, forwardRef, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, from } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nclass MdbRadioDirective {\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n  }\n  _name;\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  _checked = false;\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = null;\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled = false;\n  get isDisabled() {\n    return this._disabled;\n  }\n  get isChecked() {\n    return this._checked;\n  }\n  get nameAttr() {\n    return this.name;\n  }\n  constructor() {}\n  _updateName(value) {\n    this._name = value;\n  }\n  _updateChecked(value) {\n    this._checked = value;\n  }\n  _updateDisabledState(value) {\n    this._disabled = value;\n  }\n  static ngAcceptInputType_checked;\n  static ngAcceptInputType_disabled;\n  static ɵfac = function MdbRadioDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbRadioDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MdbRadioDirective,\n    selectors: [[\"\", \"mdbRadio\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MdbRadioDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.isDisabled)(\"checked\", ctx.isChecked);\n        i0.ɵɵattribute(\"name\", ctx.nameAttr);\n      }\n    },\n    inputs: {\n      name: \"name\",\n      checked: \"checked\",\n      value: \"value\",\n      disabled: \"disabled\"\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRadioDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbRadio]'\n    }]\n  }], () => [], {\n    name: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input,\n      args: ['checked']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['disabled']\n    }],\n    isChecked: [{\n      type: HostBinding,\n      args: ['checked']\n    }],\n    nameAttr: [{\n      type: HostBinding,\n      args: ['attr.name']\n    }]\n  });\n})();\nconst MDB_RADIO_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbRadioGroupDirective),\n  multi: true\n};\nclass MdbRadioGroupDirective {\n  radios;\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n    if (this.radios) {\n      this._updateChecked();\n    }\n  }\n  _value;\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._name = name;\n    if (this.radios) {\n      this._updateNames();\n    }\n  }\n  _name;\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    this._disabled = disabled;\n    if (this.radios) {\n      this._updateDisabled();\n    }\n  }\n  _disabled = false;\n  _destroy$ = new Subject();\n  onChange = _ => {};\n  onTouched = () => {};\n  ngAfterContentInit() {\n    this._updateNames();\n    this._updateDisabled();\n    this.radios.changes.pipe(startWith(this.radios), switchMap(radios => from(Promise.resolve(radios))), takeUntil(this._destroy$)).subscribe(() => this._updateRadiosState());\n  }\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  _updateRadiosState() {\n    this._updateNames();\n    this._updateChecked();\n    this._updateDisabled();\n  }\n  _updateNames() {\n    this.radios.forEach(radio => radio._updateName(this.name));\n  }\n  _updateChecked() {\n    this.radios.forEach(radio => {\n      const isChecked = radio.value === this._value;\n      radio._updateChecked(isChecked);\n    });\n  }\n  _updateDisabled() {\n    this.radios.forEach(radio => radio._updateDisabledState(this._disabled));\n  }\n  // Control value accessor methods\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this._disabled = isDisabled;\n    this._updateDisabled();\n  }\n  writeValue(value) {\n    this.value = value;\n  }\n  static ɵfac = function MdbRadioGroupDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbRadioGroupDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MdbRadioGroupDirective,\n    selectors: [[\"\", \"mdbRadioGroup\", \"\"]],\n    contentQueries: function MdbRadioGroupDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MdbRadioDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radios = _t);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      name: \"name\",\n      disabled: \"disabled\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MDB_RADIO_GROUP_VALUE_ACCESSOR])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRadioGroupDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbRadioGroup]',\n      providers: [MDB_RADIO_GROUP_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    radios: [{\n      type: ContentChildren,\n      args: [MdbRadioDirective, {\n        descendants: true\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nclass MdbRadioModule {\n  static ɵfac = function MdbRadioModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbRadioModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MdbRadioModule,\n    declarations: [MdbRadioDirective, MdbRadioGroupDirective],\n    imports: [CommonModule, FormsModule],\n    exports: [MdbRadioDirective, MdbRadioGroupDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, FormsModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRadioModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbRadioDirective, MdbRadioGroupDirective],\n      exports: [MdbRadioDirective, MdbRadioGroupDirective],\n      imports: [CommonModule, FormsModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MDB_RADIO_GROUP_VALUE_ACCESSOR, MdbRadioDirective, MdbRadioGroupDirective, MdbRadioModule };\n"],
  "mappings": "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",
  "names": []
}
